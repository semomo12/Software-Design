@startuml
Game : +selectGameObject(String name)

Game : -GameObjectRepository myGameObjects
Game : -Scene currentScene
Game : -Scene playerInventory

Game -- Scene

Scene : +listAvailableElements()
Scene : +boolean isAvailable(String gameElementName)
Scene : +boolean isGameObject(String gameElementName)

GameElement <|-- Scene
Scene - "*" GameObject

class GameObjectRepository
note top of GameObjectRepository: Central repository makes it easier\nto find objects to get and send events\ninstead of looking in every scene
Game -- GameObjectRepository
GameObjectRepository : +GameObject getGameObject(String gameElementName)
GameObjectRepository o-- "*" GameObject

GameElement <|-- GameObject
Game -- GameObject
GameObject : +listInteractionTypes()

Game : +selectInteraction(GameObject theGameObject, String theInteraction)
GameObject : +startInteraction(String theInteractionType)
GameObject : +listCurrentInterationOptions()
Game : +setInteractionOptions(String theOptions)
GameObject : +setCurrentInteractionOptions(String theOptions)
Game : +startInteraction()
Game : +abortInteraction()
GameObject : +startCurrentInteraction()
GameObject : +abortCurrentInteraction()

EventManager - GameElement
EventManager : +createEvent(EventCondition, Event)
EventManager : +listAffectedEvents(EventCondition)
EventManager : +triggerEvents(EventCondition)
EventManager : +clearEvent(EventCondition)
EventManager : +clearEvent(Event)
@enduml